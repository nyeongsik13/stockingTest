name: Continuous Deployment to AWS ECR

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 체크아웃 스텝
    - name: Checkout code
      uses: actions/checkout@v2

    # AWS Credentials 설정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # ECR에 로그인
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'
    
    - name: Build, tag, and push image to Amazon ECR
      env:
        AWS_DEFAULT_REGION: ***
        AWS_REGION: ***
        AWS_ACCESS_KEY_ID: ***
        AWS_SECRET_ACCESS_KEY: ***
        IMAGE_URI: ***.dkr.ecr.***.amazonaws.com/your-app:latest
      run: |
        echo "Login command: aws ecr get-login-password --region *** | docker login --username AWS --password-stdin ***.dkr.ecr.***.amazonaws.com"
        aws ecr get-login-password --region *** | docker login --username AWS --password-stdin ***.dkr.ecr.***.amazonaws.com
        
        docker build -t $IMAGE_URI \
          --build-arg DATABASE_URL="***" \
          --build-arg DATABASE_HOST="***" \
          --build-arg DATABASE_PORT="***" \
          --build-arg DATABASE_NAME="***" \
          --build-arg DATABASE_USERNAME="***" \
          --build-arg DATABASE_PASSWORD="***" \
          --build-arg PORT="***" \
          --build-arg APP_KEY="***" \
          --build-arg SECRET_KEY="***" \
          --build-arg SLACK_WEBHOOK_URL="" \
          --build-arg USER="***" \
          --build-arg PASS="***" \
          --build-arg JWT_SECRET="***" \
          --build-arg GOOGLE_SECRET="***" \
          --build-arg GOOGLE_ID="***" \
          --build-arg NAVER_ID="***" \
          --build-arg NAVER_SECRET="***" \
          --build-arg KAKAO_ID="***" \
          --build-arg BACKEND_URL="***" .
        docker push $IMAGE_URI

      

    # EC2 인스턴스에 SSH로 접속하여 Docker 이미지 배포
    - name: Deploy Docker image to EC2 instance
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ec2-user@your-ec2-instance-public-ip "docker pull $IMAGE_URI && docker-compose up -d"
